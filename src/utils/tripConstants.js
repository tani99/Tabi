// Trip status constants
export const TRIP_STATUS = {
  UPCOMING: 'upcoming',
  ONGOING: 'ongoing',
  COMPLETED: 'completed'
};

// Trip status display names
export const TRIP_STATUS_LABELS = {
  [TRIP_STATUS.UPCOMING]: 'Upcoming',
  [TRIP_STATUS.ONGOING]: 'Ongoing',
  [TRIP_STATUS.COMPLETED]: 'Completed'
};

// Trip status colors (for UI)
export const TRIP_STATUS_COLORS = {
  [TRIP_STATUS.UPCOMING]: '#FFA500', // Orange
  [TRIP_STATUS.ONGOING]: '#4CAF50',   // Green
  [TRIP_STATUS.COMPLETED]: '#2196F3'  // Blue
};

/**
 * Infer trip status based on start and end dates
 * @param {Date} startDate - Trip start date
 * @param {Date} endDate - Trip end date
 * @returns {string} - Inferred status (upcoming, ongoing, or completed)
 */
export const inferTripStatus = (startDate, endDate) => {
  if (!startDate || !endDate) {
    return TRIP_STATUS.UPCOMING; // Default to upcoming if dates are missing
  }

  const now = new Date();
  const start = new Date(startDate);
  const end = new Date(endDate);

  // Set time to start of day for accurate comparison
  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
  const tripStart = new Date(start.getFullYear(), start.getMonth(), start.getDate());
  const tripEnd = new Date(end.getFullYear(), end.getMonth(), end.getDate());

  if (today < tripStart) {
    return TRIP_STATUS.UPCOMING;
  } else if (today >= tripStart && today <= tripEnd) {
    return TRIP_STATUS.ONGOING;
  } else {
    return TRIP_STATUS.COMPLETED;
  }
};

/**
 * Calculate the number of days between two dates (inclusive)
 * @param {Date} startDate - Start date
 * @param {Date} endDate - End date
 * @returns {number} - Number of days (inclusive of both start and end dates)
 */
export const calculateTripDays = (startDate, endDate) => {
  if (!startDate || !endDate) {
    return 0;
  }

  const start = new Date(startDate);
  const end = new Date(endDate);
  
  // Set time to start of day for accurate calculation
  const tripStart = new Date(start.getFullYear(), start.getMonth(), start.getDate());
  const tripEnd = new Date(end.getFullYear(), end.getMonth(), end.getDate());
  
  // Calculate difference in milliseconds
  const timeDifference = tripEnd.getTime() - tripStart.getTime();
  
  // Convert to days and add 1 to make it inclusive
  const daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24)) + 1;
  
  return Math.max(1, daysDifference); // Ensure at least 1 day
};

// Trip data model structure
export const TRIP_MODEL = {
  id: '',              // Auto-generated by Firestore
  userId: '',          // User ID (for access control)
  name: '',            // Trip name/title
  location: '',        // Destination
  startDate: null,     // Start date (Date object)
  endDate: null,       // End date (Date object)
  description: '',     // Optional trip notes
  // Note: status is now inferred from startDate and endDate
  createdAt: null,     // Creation timestamp
  updatedAt: null      // Last update timestamp
};

// Validation rules
export const TRIP_VALIDATION = {
  name: {
    required: true,
    minLength: 1,
    maxLength: 100
  },
  location: {
    required: true,
    minLength: 1,
    maxLength: 100
  },
  startDate: {
    required: true
  },
  endDate: {
    required: true
  },
  description: {
    required: false,
    maxLength: 500
  }
};

// Default trip values
export const DEFAULT_TRIP = {
  name: '',
  location: '',
  startDate: new Date(),
  endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days from now
  description: ''
  // Note: status is now inferred from startDate and endDate
};
